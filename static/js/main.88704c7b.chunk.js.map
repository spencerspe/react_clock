{"version":3,"sources":["App.tsx","index.tsx"],"names":["getRandomName","value","Date","now","toString","slice","App","randomNum","clockRun","state","today","clockName","hasClock","document","addEventListener","event","preventDefault","setState","stopClocks","startClock","this","_prevProps","prevState","console","debug","setInterval","info","toUTCString","clearInterval","className","React","Component","ReactDOM","render","getElementById"],"mappings":"sNAGA,SAASA,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,GAWX,IAAMK,EAAb,4MACEC,UAAmC,KADrC,EAGEC,SAAkC,KAHpC,EAKEC,MAAe,CACbC,MAAO,IAAIR,KACXS,UAAW,UACXC,UAAU,GARd,uDAWE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKC,SAAS,CAAEL,UAAU,IAC1B,EAAKM,gBAEPL,SAASC,iBAAiB,SAAS,WACjC,EAAKG,SAAS,CAAEL,UAAU,IAC1B,EAAKO,gBAGHC,KAAKX,MAAMG,UACbQ,KAAKD,eAvBX,gCA2BE,SAAmBE,EAAmBC,GAChCF,KAAKX,MAAME,YAAcW,EAAUX,WAErCY,QAAQC,MAAR,uBAA8BF,EAAUX,UAAxC,eAAwDS,KAAKX,MAAME,cA9BzE,kCAkCE,WACES,KAAKF,eAnCT,wBAsCE,WAAc,IAAD,OACXE,KAAKZ,SAAWiB,aAAY,WAC1B,EAAKR,SAAS,CAAEP,MAAO,IAAIR,OAE3BqB,QAAQG,KAAK,EAAKjB,MAAMC,MAAMiB,cAActB,OAAO,IAAK,MACvD,KAEHe,KAAKb,UAAYkB,aAAY,WAC3B,EAAKR,SAAS,CAAEN,UAAWX,QAC1B,QA/CP,wBAkDE,WACMoB,KAAKZ,UAAYY,KAAKb,YACxBqB,cAAcR,KAAKZ,UACnBoB,cAAcR,KAAKb,cArDzB,oBAyDE,WACE,OACE,sBAAKsB,UAAU,MAAf,UACE,6CAECT,KAAKX,MAAMG,SACV,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCT,KAAKX,MAAME,YAE3C,YAED,sBAAMkB,UAAU,cAAhB,SACGT,KAAKX,MAAMC,MAAMiB,cAActB,OAAO,IAAK,QAG9C,YAxEZ,GAAyByB,IAAMC,WCd/BC,IAASC,OACP,cAAC,EAAD,IACApB,SAASqB,eAAe,W","file":"static/js/main.88704c7b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype Props = {};\n\ntype State = {\n  clockName: string;\n  today: Date;\n  hasClock: boolean;\n};\n\nexport class App extends React.Component<Props, State> {\n  randomNum: NodeJS.Timeout | null = null;\n\n  clockRun: NodeJS.Timeout | null = null;\n\n  state: State = {\n    today: new Date(),\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n      this.stopClocks();\n    });\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n      this.startClock();\n    });\n\n    if (this.state.hasClock) {\n      this.startClock();\n    }\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (this.state.clockName !== prevState.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    this.stopClocks();\n  }\n\n  startClock() {\n    this.clockRun = setInterval(() => {\n      this.setState({ today: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n\n    this.randomNum = setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  stopClocks() {\n    if (this.clockRun && this.randomNum) {\n      clearInterval(this.clockRun);\n      clearInterval(this.randomNum);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock ? (\n          <div className=\"Clock\">\n            <strong className=\"Clock__name\">{this.state.clockName}</strong>\n\n            {' time is '}\n\n            <span className=\"Clock__time\">\n              {this.state.today.toUTCString().slice(-12, -4)}\n            </span>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}